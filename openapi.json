{"openapi": "3.0.2", "info": {"title": "Composer API", "description": "Retrieve documents using vector embeddings.", "version": "0.5.0"}, "paths": {"/v1/embedding/create": {"post": {"tags": ["v1"], "summary": "Create Content Deprecated", "description": "Create new content with embeddings in database.\n\nNOTE: This endpoint receives an ID in the body for testing purposes.\nOtherwise it is randomly generated.\nDEPRECATED: Use POST /embedding instead.", "operationId": "create_content_deprecated_v1_embedding_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateContentRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseWrapper_ResponseContentId_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v1/embedding/read": {"post": {"tags": ["v1"], "summary": "Read Public Content By Embedded Description Deprecated", "description": "Get most similar results from database based on given description.\n\nNOTE: This endpoint still returns both Public and non-public content.\nDEPRECATED: Use GET /embedding with a non null description query parameter.\nFor example: GET /embedding?description=...", "operationId": "read_public_content_by_embedded_description_deprecated_v1_embedding_read_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EmbeddingPostRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseWrapper_ContentViewSimilarity_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/embedding/": {"get": {"tags": ["v1"], "summary": "Read Public Content List", "description": "Read list of content, max limit is 25.\n\nThis endpoint returns public content only.", "operationId": "read_public_content_list_v1_embedding__get", "parameters": [{"required": false, "schema": {"title": "Offset", "type": "integer", "default": 0}, "name": "offset", "in": "query"}, {"required": false, "schema": {"title": "Limit", "type": "integer", "default": 5}, "name": "limit", "in": "query"}, {"required": false, "schema": {"title": "Description", "type": "string"}, "name": "description", "in": "query"}, {"required": false, "schema": {"title": "Threshold", "type": "number", "default": 0.85}, "name": "threshold", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseWrapper_ContentViewSimilarity_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["v1"], "summary": "Create Content", "description": "Create new content with embeddings in database.\n\nInclude ID for testing purposes, otherwise it is automatically generated.", "operationId": "create_content_v1_embedding__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateContentRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseContentId"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v1/embedding/{id}": {"get": {"tags": ["v1"], "summary": "Read Public Content", "description": "Read content by id.\n\nThis endpoint returns public content, for private content go to /user/{...}", "operationId": "read_public_content_v1_embedding__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentView"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["v1"], "summary": "Update Content", "description": "Update content in database.\n\nThis requires Authorization and that the user owns the resource.", "operationId": "update_content_v1_embedding__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateContentRequest"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "delete": {"tags": ["v1"], "summary": "Delete Content", "description": "Delete content from database.\n\nThis requires Authorization and that the user owns the resource.", "operationId": "delete_content_v1_embedding__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Unauthorized401"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "409": {"description": "Conflict", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document409"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v1/user/embedding/": {"get": {"tags": ["v1"], "summary": "Read Content List", "description": "Read list of content, max limit is 25.\n\nInclude description if want to search by similarity, with given threshold.\nOtherwise returns ordered by last_modified.\n\nThis endpoint only returns embeddings owned by the user.", "operationId": "read_content_list_v1_user_embedding__get", "parameters": [{"required": false, "schema": {"title": "Offset", "type": "integer", "default": 0}, "name": "offset", "in": "query"}, {"required": false, "schema": {"title": "Limit", "type": "integer", "default": 5}, "name": "limit", "in": "query"}, {"required": false, "schema": {"title": "Description", "type": "string"}, "name": "description", "in": "query"}, {"required": false, "schema": {"title": "Threshold", "type": "number", "default": 0.85}, "name": "threshold", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseWrapper_ContentViewSimilarity_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v1/user/{id}": {"get": {"tags": ["v1"], "summary": "Read Content", "description": "Read content by id.\n\nThis endpoint returns public content, for private content go to /user/{...}", "operationId": "read_content_v1_user__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentView"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v1/user/test/": {"get": {"tags": ["v1"], "summary": "Test User", "description": "Test getting current user data.", "operationId": "test_user_v1_user_test__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserData"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/public/documents/": {"get": {"tags": ["v2-documents"], "summary": "Read Public Documents", "description": "Returns a list of documents.\nSorted by updated_at if description is not provided, otherwise use description for similarity search.\nRequires no Authentication.", "operationId": "read_public_documents_v2_public_documents__get", "parameters": [{"description": "Offset for pagination.", "required": false, "schema": {"title": "Offset", "minimum": 0.0, "type": "integer", "description": "Offset for pagination.", "default": 0}, "name": "offset", "in": "query"}, {"description": "Limit for pagination.", "required": false, "schema": {"title": "Limit", "maximum": 25.0, "minimum": 1.0, "type": "integer", "description": "Limit for pagination.", "default": 5}, "name": "limit", "in": "query"}, {"description": "Document type filter. Returns any if it is none. Defaults to none.", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/DOCUMENT_TYPE"}], "description": "Document type filter. Returns any if it is none. Defaults to none."}, "name": "type", "in": "query"}, {"description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "required": false, "schema": {"title": "Preview", "type": "boolean", "description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "default": false}, "name": "preview", "in": "query"}, {"description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null.", "required": false, "schema": {"title": "Description", "type": "string", "description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null."}, "name": "description", "in": "query"}, {"description": "When using similarity search, return only results above this threshold.", "required": false, "schema": {"title": "Threshold", "maximum": 1.0, "minimum": 0.0, "type": "number", "description": "When using similarity search, return only results above this threshold.", "default": 0.85}, "name": "threshold", "in": "query"}, {"description": "Two timestamps (before, after) for filtering. Defaults to none.", "required": false, "schema": {"title": "Time Range", "type": "array", "items": {"type": "string", "format": "date-time"}, "description": "Two timestamps (before, after) for filtering. Defaults to none."}, "name": "time_range", "in": "query"}, {"description": "Temperature for similarity search. Defaults to 0.2", "required": false, "schema": {"title": "Temperature", "maximum": 1.0, "minimum": 0.0, "type": "number", "description": "Temperature for similarity search. Defaults to 0.2", "default": 0.2}, "name": "temperature", "in": "query"}, {"description": "List of tags to filter by. Not supported with similarity search yet. Defaults to none.", "required": false, "schema": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "List of tags to filter by. Not supported with similarity search yet. Defaults to none."}, "name": "tags", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MultipleResults_DocumentSimilarityResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v2/public/documents/{id}": {"get": {"tags": ["v2-documents"], "summary": "Read Public Document", "description": "Returns a single document under \"result\". Get public document by ID. Requires no Authentication.", "operationId": "read_public_document_v2_public_documents__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}, {"description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "required": false, "schema": {"title": "Preview", "type": "boolean", "description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "default": false}, "name": "preview", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleResult_DocumentResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v2/user/documents/": {"get": {"tags": ["v2-documents"], "summary": "Read User Documents", "description": "Requires Authentication.\nReturns a list of documents of the authenticated user.\nSorted by updated_at if description is not provided, otherwise use description for similarity search.", "operationId": "read_user_documents_v2_user_documents__get", "parameters": [{"description": "Offset for pagination.", "required": false, "schema": {"title": "Offset", "minimum": 0.0, "type": "integer", "description": "Offset for pagination.", "default": 0}, "name": "offset", "in": "query"}, {"description": "Limit for pagination.", "required": false, "schema": {"title": "Limit", "maximum": 25.0, "minimum": 1.0, "type": "integer", "description": "Limit for pagination.", "default": 5}, "name": "limit", "in": "query"}, {"description": "Document type filter. Returns any if it is none. Defaults to none.", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/DOCUMENT_TYPE"}], "description": "Document type filter. Returns any if it is none. Defaults to none."}, "name": "type", "in": "query"}, {"description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "required": false, "schema": {"title": "Preview", "type": "boolean", "description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "default": false}, "name": "preview", "in": "query"}, {"description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null.", "required": false, "schema": {"title": "Description", "type": "string", "description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null."}, "name": "description", "in": "query"}, {"description": "When using similarity search, return only results above this threshold.", "required": false, "schema": {"title": "Threshold", "maximum": 1.0, "minimum": 0.0, "type": "number", "description": "When using similarity search, return only results above this threshold.", "default": 0.85}, "name": "threshold", "in": "query"}, {"description": "Two timestamps (before, after) for filtering. Defaults to none.", "required": false, "schema": {"title": "Time Range", "type": "array", "items": {"type": "string", "format": "date-time"}, "description": "Two timestamps (before, after) for filtering. Defaults to none."}, "name": "time_range", "in": "query"}, {"description": "Temperature for similarity search. Defaults to 0.2", "required": false, "schema": {"title": "Temperature", "maximum": 1.0, "minimum": 0.0, "type": "number", "description": "Temperature for similarity search. Defaults to 0.2", "default": 0.2}, "name": "temperature", "in": "query"}, {"description": "List of tags to filter by. Not supported with similarity search yet. Defaults to none.", "required": false, "schema": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "List of tags to filter by. Not supported with similarity search yet. Defaults to none."}, "name": "tags", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MultipleResults_DocumentSimilarityResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "post": {"tags": ["v2-documents"], "summary": "Create User Document", "description": "Create new document as Authenticated user.", "operationId": "create_user_document_v2_user_documents__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateDocumentRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceID"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/user/documents/{id}": {"get": {"tags": ["v2-documents"], "summary": "Read User Document", "description": "Get existing document as Authenticated user.", "operationId": "read_user_document_v2_user_documents__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}, {"description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "required": false, "schema": {"title": "Preview", "type": "boolean", "description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "default": false}, "name": "preview", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleResult_DocumentResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document403"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "put": {"tags": ["v2-documents"], "summary": "Update User Document", "description": "Update existing document as Authenticated user.", "operationId": "update_user_document_v2_user_documents__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateDocumentRequest"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "delete": {"tags": ["v2-documents"], "summary": "Delete User Document", "description": "Delete existing document as Authenticated user.", "operationId": "delete_user_document_v2_user_documents__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document404"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/user/projects/": {"get": {"tags": ["v2-projects"], "summary": "Read User Projects", "description": "Requires Authentication. Always returns previews.", "operationId": "read_user_projects_v2_user_projects__get", "parameters": [{"description": "Offset for pagination.", "required": false, "schema": {"title": "Offset", "minimum": 0.0, "type": "integer", "description": "Offset for pagination.", "default": 0}, "name": "offset", "in": "query"}, {"description": "Limit for pagination.", "required": false, "schema": {"title": "Limit", "maximum": 25.0, "minimum": 1.0, "type": "integer", "description": "Limit for pagination.", "default": 5}, "name": "limit", "in": "query"}, {"description": "Project type filter. Returns any if it is none. Defaults to none.", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/PROJECT_TYPE"}], "description": "Project type filter. Returns any if it is none. Defaults to none."}, "name": "type", "in": "query"}, {"description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null.", "required": false, "schema": {"title": "Description", "type": "string", "description": "Used for similarity search if provided. Defaults to none. If not set, similarity search is not used, and result's similarity is null."}, "name": "description", "in": "query"}, {"description": "When using similarity search, return only results above this threshold.", "required": false, "schema": {"title": "Threshold", "maximum": 1.0, "minimum": 0.0, "type": "number", "description": "When using similarity search, return only results above this threshold.", "default": 0.85}, "name": "threshold", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MultipleResults_ProjectSimilarityResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "post": {"tags": ["v2-projects"], "summary": "Create User Project", "description": "Create new project as Authenticated user.", "operationId": "create_user_project_v2_user_projects__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateProjectRequest"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceID"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/user/projects/{id}": {"get": {"tags": ["v2-projects"], "summary": "Read User Project", "description": "Get existing project as Authenticated user.", "operationId": "read_user_project_v2_user_projects__id__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SingleResult_ProjectResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "put": {"tags": ["v2-projects"], "summary": "Update User Project", "description": "Update existing project as Authenticated user.", "operationId": "update_user_project_v2_user_projects__id__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateProjectRequest"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "delete": {"tags": ["v2-projects"], "summary": "Delete User Project", "description": "Delete existing project as Authenticated user.", "operationId": "delete_user_project_v2_user_projects__id__delete", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/user/projects/{id}/documents/": {"get": {"tags": ["v2-projects"], "summary": "Read User Project Documents", "operationId": "read_user_project_documents_v2_user_projects__id__documents__get", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}, {"description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "required": false, "schema": {"title": "Preview", "type": "boolean", "description": "Preview mode. Sets result's **data** field to `null` if True to reduce payload size. Defaults to False.", "default": false}, "name": "preview", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MultipleResults_ProjectDocumentsResult_"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}, "put": {"tags": ["v2-projects"], "summary": "Update User Project Documents", "operationId": "update_user_project_documents_v2_user_projects__id__documents__put", "parameters": [{"required": true, "schema": {"title": "Id", "type": "string", "format": "uuid"}, "name": "id", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateProjectDocumentsRequest"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2": []}]}}, "/v2/assets/images/": {"get": {"tags": ["v2-assets"], "summary": "Read Similar Images", "description": "Get similar images.", "operationId": "read_similar_images_v2_assets_images__get", "parameters": [{"required": true, "schema": {"title": "Description", "type": "array", "items": {"type": "string"}}, "name": "description", "in": "query"}, {"required": false, "schema": {"title": "Threshold", "type": "number", "default": 0.5}, "name": "threshold", "in": "query"}, {"required": false, "schema": {"title": "Offset", "type": "integer", "default": 0}, "name": "offset", "in": "query"}, {"required": false, "schema": {"title": "Limit", "type": "integer", "default": 1}, "name": "limit", "in": "query"}, {"required": false, "schema": {"title": "Temperature", "maximum": 1.0, "minimum": 0.0, "type": "number", "default": 0.2}, "name": "temperature", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssetResults"}}}}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v2/assets/images/upload": {"post": {"tags": ["v2-assets"], "summary": "Upload Image", "operationId": "upload_image_v2_assets_images_upload_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateImageEmbedding"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "502": {"description": "Bad Gateway", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Embeddings502"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"summary": "Home", "description": "General API information.", "operationId": "home__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HomeResponse"}}}}}}}}, "components": {"schemas": {"AssetResults": {"title": "AssetResults", "required": ["result"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/SimilarityResults"}}}}, "ContentView": {"title": "ContentView", "required": ["id", "url", "html", "img_url", "public", "description", "tags"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "url": {"title": "Url", "type": "string"}, "html": {"title": "Html", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}, "owner": {"title": "Owner", "type": "string"}}, "description": "Schema for inserting and querying content from database."}, "ContentViewSimilarity": {"title": "ContentViewSimilarity", "required": ["id", "url", "html", "img_url", "public", "description", "tags"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "url": {"title": "Url", "type": "string"}, "html": {"title": "Html", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}, "owner": {"title": "Owner", "type": "string"}, "similarity": {"title": "Similarity", "type": "number", "default": 0.0}}, "description": "Schema for inserting and querying content from database."}, "CreateContentRequest": {"title": "CreateContentRequest", "type": "object", "properties": {"id": {"title": "Id", "type": "string", "description": "ID of the resource.", "format": "uuid"}, "url": {"title": "Url", "type": "string", "default": "example url"}, "html": {"title": "Html", "type": "string", "default": "<main style=\"background-color: red;\"></main>"}, "img_url": {"title": "Img Url", "type": "string", "default": "image url"}, "public": {"title": "Public", "type": "boolean", "default": true}, "description": {"title": "Description", "type": "string", "description": "Used for creating the embedding.", "default": "Red background"}, "tags": {"title": "Tags", "maxLength": 64, "maxItems": 32, "type": "array", "items": {"maxLength": 64, "type": "string"}, "description": "Optional list of tags."}}, "description": "Schema for content request from client."}, "CreateDocumentRequest": {"title": "CreateDocumentRequest", "required": ["name", "public", "description", "url", "img_url", "tags", "type", "data"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}, "type": {"$ref": "#/components/schemas/DOCUMENT_TYPE"}, "data": {"title": "Data", "type": "object"}}}, "CreateImageEmbedding": {"title": "CreateImageEmbedding", "required": ["uri", "description", "width", "height", "aspect_ratio", "mime_type"], "type": "object", "properties": {"uri": {"title": "Uri", "type": "string"}, "description": {"title": "Description", "type": "string"}, "width": {"title": "Width", "type": "integer"}, "height": {"title": "Height", "type": "integer"}, "aspect_ratio": {"title": "Aspect Ratio", "type": "number"}, "mime_type": {"title": "Mime Type", "type": "string"}}}, "CreateProjectRequest": {"title": "CreateProjectRequest", "required": ["name", "public", "description", "url", "img_url", "tags", "type", "data"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}, "type": {"$ref": "#/components/schemas/PROJECT_TYPE"}, "data": {"$ref": "#/components/schemas/CreateProjectRequestData"}}}, "CreateProjectRequestData": {"title": "CreateProjectRequestData", "required": ["content", "styles", "other"], "type": "object", "properties": {"content": {"title": "Content", "type": "array", "items": {"$ref": "#/components/schemas/CreateDocumentRequest"}}, "styles": {"title": "Styles", "type": "array", "items": {"$ref": "#/components/schemas/CreateDocumentRequest"}}, "other": {"title": "Other", "type": "array", "items": {"$ref": "#/components/schemas/CreateDocumentRequest"}}}}, "DOCUMENT_TYPE": {"title": "DOCUMENT_TYPE", "enum": ["html", "html.navbar", "html.call_to_action", "html.gallery", "html.form", "html.footer", "react", "css", "css.background_colors", "css.text_colors", "css.font_values", "css.spacing_values", "css.border_values", "tailwind", "js", "content_slot", "styles_slot.background_colors", "styles_slot.text_colors", "styles_slot.font_values", "styles_slot.spacing_values", "styles_slot.border_values", "admin_config_file", "marked_for_delete"], "type": "string", "description": "An enumeration."}, "Document403": {"title": "Document403", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "Document is not owned by user."}}}, "Document404": {"title": "Document404", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "Document was not found."}}}, "Document409": {"title": "Document409", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "Document with given id already exists."}}}, "DocumentCategory": {"title": "DocumentCategory", "enum": ["content", "styles", "other"], "type": "string", "description": "An enumeration."}, "DocumentMetadata": {"title": "DocumentMetadata", "required": ["preview"], "type": "object", "properties": {"preview": {"title": "Preview", "type": "boolean", "description": "Whether the result is a preview and doesn't include the 'data' field."}, "by_similarity": {"title": "By Similarity", "type": "boolean", "description": "Whether the result was retrieved by similarity.", "default": false}}, "description": "Metadata of the transaction. Non-persistent."}, "DocumentResult": {"title": "DocumentResult", "required": ["id", "owner_username", "owner_type", "created_at", "updated_at", "name", "public", "description", "url", "img_url", "tags", "type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "owner_username": {"title": "Owner Username", "type": "string"}, "owner_type": {"$ref": "#/components/schemas/USER_TYPE"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time"}, "name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "Document tags, can be empty list."}, "type": {"$ref": "#/components/schemas/DOCUMENT_TYPE"}, "data": {"title": "Data", "type": "object"}}}, "DocumentSimilarityResult": {"title": "DocumentSimilarityResult", "required": ["id", "owner_username", "owner_type", "created_at", "updated_at", "name", "public", "description", "url", "img_url", "tags", "type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "owner_username": {"title": "Owner Username", "type": "string"}, "owner_type": {"$ref": "#/components/schemas/USER_TYPE"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time"}, "name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "Document tags, can be empty list."}, "type": {"$ref": "#/components/schemas/DOCUMENT_TYPE"}, "data": {"title": "Data", "type": "object"}, "similarity": {"title": "Similarity", "type": "number", "description": "Similarity score, may be over 1.0 if temperature is > 0"}}}, "EmbeddingPostRequest": {"title": "EmbeddingPostRequest", "type": "object", "properties": {"description": {"title": "Description", "type": "string", "default": "Landing page with red background"}, "threshold": {"title": "Threshold", "type": "number", "default": 0.85}, "offset": {"title": "Offset", "minimum": 0.0, "type": "integer", "default": 0}, "limit": {"title": "Limit", "maximum": 50.0, "minimum": 1.0, "type": "integer", "default": 5}}, "description": "Request from client with description."}, "Embeddings502": {"title": "Embeddings502", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "Unable to reach vector embedding provider."}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "HomeResponse": {"title": "HomeResponse", "required": ["title", "description", "api_version"], "type": "object", "properties": {"title": {"title": "Title", "type": "string"}, "description": {"title": "Description", "type": "string"}, "api_version": {"title": "Api Version", "type": "string"}}}, "ImageResult": {"title": "ImageResult", "required": ["uri", "width", "height", "aspect_ratio", "mime_type", "similarity"], "type": "object", "properties": {"uri": {"title": "Uri", "type": "string"}, "width": {"title": "Width", "type": "integer"}, "height": {"title": "Height", "type": "integer"}, "aspect_ratio": {"title": "Aspect Ratio", "type": "number"}, "mime_type": {"title": "Mime Type", "type": "string"}, "similarity": {"title": "Similarity", "type": "number"}}}, "MultipleResults_DocumentSimilarityResult_": {"title": "MultipleResults[DocumentSimilarityResult]", "required": ["result", "metadata"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/DocumentSimilarityResult"}, "description": "List of retrieved documents."}, "metadata": {"$ref": "#/components/schemas/DocumentMetadata"}}, "description": "Wrapper for returning a collection."}, "MultipleResults_ProjectDocumentsResult_": {"title": "MultipleResults[ProjectDocumentsResult]", "required": ["result", "metadata"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/ProjectDocumentsResult"}, "description": "List of retrieved documents."}, "metadata": {"$ref": "#/components/schemas/DocumentMetadata"}}, "description": "Wrapper for returning a collection."}, "MultipleResults_ProjectSimilarityResult_": {"title": "MultipleResults[ProjectSimilarityResult]", "required": ["result", "metadata"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/ProjectSimilarityResult"}, "description": "List of retrieved documents."}, "metadata": {"$ref": "#/components/schemas/DocumentMetadata"}}, "description": "Wrapper for returning a collection."}, "PROJECT_TYPE": {"title": "PROJECT_TYPE", "enum": ["html_css", "react_tailwind"], "type": "string", "description": "An enumeration."}, "ProjectDocumentsResult": {"title": "ProjectDocumentsResult", "required": ["id", "owner_username", "owner_type", "created_at", "updated_at", "name", "public", "description", "url", "img_url", "tags", "type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "owner_username": {"title": "Owner Username", "type": "string"}, "owner_type": {"$ref": "#/components/schemas/USER_TYPE"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time"}, "name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "Document tags, can be empty list."}, "type": {"$ref": "#/components/schemas/DOCUMENT_TYPE"}, "data": {"title": "Data", "type": "object"}, "category": {"$ref": "#/components/schemas/DocumentCategory"}}, "description": "Temporary validator for category"}, "ProjectResult": {"title": "ProjectResult", "required": ["id", "owner_username", "owner_type", "created_at", "updated_at", "name", "public", "description", "url", "img_url", "tags", "type", "document_ids"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "owner_username": {"title": "Owner Username", "type": "string"}, "owner_type": {"$ref": "#/components/schemas/USER_TYPE"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time"}, "name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "Can be empty list."}, "type": {"$ref": "#/components/schemas/PROJECT_TYPE"}, "document_ids": {"title": "Document Ids", "type": "array", "items": {"type": "string", "format": "uuid"}, "description": "Can be empty list."}}}, "ProjectSimilarityResult": {"title": "ProjectSimilarityResult", "required": ["id", "owner_username", "owner_type", "created_at", "updated_at", "name", "public", "description", "url", "img_url", "tags", "type", "document_ids"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "owner_username": {"title": "Owner Username", "type": "string"}, "owner_type": {"$ref": "#/components/schemas/USER_TYPE"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time"}, "name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}, "description": "Can be empty list."}, "type": {"$ref": "#/components/schemas/PROJECT_TYPE"}, "document_ids": {"title": "Document Ids", "type": "array", "items": {"type": "string", "format": "uuid"}, "description": "Can be empty list."}, "similarity": {"title": "Similarity", "type": "number", "description": "Similarity score, may be over 1.0 if temperature is > 0"}}}, "ResourceID": {"title": "ResourceID", "required": ["id"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}}}, "ResponseContentId": {"title": "ResponseContentId", "required": ["id"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}}, "description": "Schema for when a new content is inserted."}, "ResponseWrapper_ContentViewSimilarity_": {"title": "ResponseWrapper[ContentViewSimilarity]", "required": ["result"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/ContentViewSimilarity"}}}, "description": "Forces to always return a JSON object with a list of results."}, "ResponseWrapper_ResponseContentId_": {"title": "ResponseWrapper[ResponseContentId]", "required": ["result"], "type": "object", "properties": {"result": {"title": "Result", "type": "array", "items": {"$ref": "#/components/schemas/ResponseContentId"}}}, "description": "Forces to always return a JSON object with a list of results."}, "SimilarityResults": {"title": "SimilarityResults", "required": ["description", "similar"], "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "similar": {"title": "Similar", "type": "array", "items": {"$ref": "#/components/schemas/ImageResult"}}}}, "SingleResult_DocumentResult_": {"title": "SingleResult[DocumentResult]", "required": ["result", "metadata"], "type": "object", "properties": {"result": {"title": "Result", "allOf": [{"$ref": "#/components/schemas/DocumentResult"}], "description": "Single retrieved document."}, "metadata": {"$ref": "#/components/schemas/DocumentMetadata"}}, "description": "Wrapper for a single result."}, "SingleResult_ProjectResult_": {"title": "SingleResult[ProjectResult]", "required": ["result", "metadata"], "type": "object", "properties": {"result": {"title": "Result", "allOf": [{"$ref": "#/components/schemas/ProjectResult"}], "description": "Single retrieved document."}, "metadata": {"$ref": "#/components/schemas/DocumentMetadata"}}, "description": "Wrapper for a single result."}, "USER_TYPE": {"title": "USER_TYPE", "enum": ["user", "admin", "subscriber"], "type": "string", "description": "An enumeration."}, "Unauthorized401": {"title": "Unauthorized401", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "Unauthorized"}}}, "UpdateContentRequest": {"title": "UpdateContentRequest", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "default": "example url"}, "html": {"title": "Html", "type": "string", "default": "<main style=\"background-color: red;\"></main>"}, "img_url": {"title": "Img Url", "type": "string", "default": "image url"}, "public": {"title": "Public", "type": "boolean", "default": true}, "description": {"title": "Description", "type": "string", "description": "Used for creating the embedding.", "default": "Red background"}, "tags": {"title": "Tags", "maxLength": 64, "maxItems": 32, "type": "array", "items": {"maxLength": 64, "type": "string"}, "description": "Optional list of tags."}}}, "UpdateProjectDocumentsRequest": {"title": "UpdateProjectDocumentsRequest", "required": ["document_ids"], "type": "object", "properties": {"document_ids": {"title": "Document Ids", "type": "array", "items": {"type": "string", "format": "uuid"}}}}, "UpdateProjectRequest": {"title": "UpdateProjectRequest", "required": ["name", "public", "description", "url", "img_url", "tags", "type"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "public": {"title": "Public", "type": "boolean"}, "description": {"title": "Description", "type": "string"}, "url": {"title": "Url", "type": "string"}, "img_url": {"title": "Img Url", "type": "string"}, "tags": {"title": "Tags", "type": "array", "items": {"type": "string"}}, "type": {"$ref": "#/components/schemas/PROJECT_TYPE"}}}, "UserData": {"title": "UserData", "required": ["sub", "preferred_username"], "type": "object", "properties": {"sub": {"title": "Sub", "type": "string", "format": "uuid"}, "preferred_username": {"title": "Preferred Username", "type": "string"}, "type_id": {"title": "Type Id", "type": "integer", "default": 0}, "cognito:groups": {"title": "Cognito:Groups", "anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "string"}]}}, "description": "Get only required claims for db operations."}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"OAuth2": {"type": "http", "scheme": "bearer"}}}}